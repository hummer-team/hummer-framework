<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <groupId>com.hummer</groupId>
    <artifactId>hummer-framework</artifactId>
    <version>1.0.0-SNAPSHOT</version>
    <modules>
        <module>hummer-common</module>
        <module>hummer-config</module>
        <module>hummer-rest</module>
        <module>hummer-plugin</module>
        <module>hummer-dao</module>
        <module>hummer-boot-starter</module>
        <module>hummer-core</module>
        <module>hummer-simple</module>
        <module>hummer-test</module>
        <module>hummer-supper-zookeeper</module>
        <module>hummer-gateway</module>
    </modules>
    <packaging>pom</packaging>
    <name>hummer-framework</name>
    <description>hummer-framework project for Spring Boot</description>

    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>2.4.1</version>
    </parent>


    <!-- <distributionManagement>
        <repository>
            <id>releases-local</id>
            <url>http://localhost:8081/nexus/content/repositories/releases</url>
        </repository>
        <snapshotRepository>
            <id>snapshots-local</id>
            <url>http://localhost:8081/nexus/content/repositories/snapshots</url>
        </snapshotRepository>
    </distributionManagement> -->

    <distributionManagement>
        <repository>
            <id>maven-releases</id>
            <url>http://10.10.10.250:8081/repository/maven-releases/</url>
        </repository>
        <snapshotRepository>
            <id>nexus-snapshots</id>
            <url>http://10.10.10.250:8081/repository/maven-snapshots/</url>
        </snapshotRepository>
    </distributionManagement>

    <!-- Properties -->
    <properties>

        <java.version>1.8</java.version>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        <maven.compiler.source>${java.version}</maven.compiler.source>
        <maven.compiler.target>${java.version}</maven.compiler.target>
        <unit-tests.skip>false</unit-tests.skip>
        <integration-tests.skip>false</integration-tests.skip>
        <project.artifact.name>${project.artifactId}</project.artifact.name>
        <build.number>LOCAL</build.number>
        <unit-tests.skip>false</unit-tests.skip>
        <integration-tests.skip>false</integration-tests.skip>
        <sonar.java.coveragePlugin>jacoco</sonar.java.coveragePlugin>
        <sonar.dynamicAnalysis>reuseReports</sonar.dynamicAnalysis>
        <sonar.jacoco.reportPaths>${project.basedir}/../target/jacoco.exec</sonar.jacoco.reportPaths>
        <sonar.language>java</sonar.language>
        <sonar.exclusions>
            **/domain/*
        </sonar.exclusions>
        <surefire.forkNumber>0</surefire.forkNumber>
        <jacoco.dataFile>${project.basedir}/../target/jacoco.exec</jacoco.dataFile>
        <jacoco.reporting.outputDirectory>${project.basedir}/../target/reports/jacoco</jacoco.reporting.outputDirectory>
        <jacoco.inclNoLocationClasses>true</jacoco.inclNoLocationClasses>
        <!-- add the rest controller list for swaggaer -->
        <rest-locations>com.hummer.hummer-framework.web</rest-locations>

        <!--framework version-->
        <hummer.version>1.0.0-SNAPSHOT</hummer.version>
        <!--spring-->
        <spring-cloud.version>2.2.3.RELEASE</spring-cloud.version>
        <spring.retry.version>1.3.0</spring.retry.version>

        <spring-cloud-stream-binder-kafka.version>3.1.0</spring-cloud-stream-binder-kafka.version>
        <spring-boot.version>2.4.1</spring-boot.version>
        <spring-boot-starter-undertow.version>2.4.1</spring-boot-starter-undertow.version>
        <spring-boot-starter-log4j2.version>2.4.1</spring-boot-starter-log4j2.version>

        <spring-aop.version>5.3.2</spring-aop.version>
        <spring-webmvc.version>5.3.2</spring-webmvc.version>
        <spring-core.version>5.3.2</spring-core.version>
        <spring-tx.version>5.3.2</spring-tx.version>
        <spring-jdbc.version>5.3.2</spring-jdbc.version>
        <spring-test.version>5.3.2</spring-test.version>
        <spring-beans.version>5.3.2</spring-beans.version>
        <!--other framework-->
        <fastjson.version>1.2.71</fastjson.version>
        <slf4j-api.version>1.7.30</slf4j-api.version>
        <junit.version>4.13.1</junit.version>
        <mockito-core.version>2.8.47</mockito-core.version>
        <swagger.version>2.7.0</swagger.version>
        <logback.version>1.2.3</logback.version>
        <cucumber-version>1.2.5</cucumber-version>
        <modelmapper-version>2.3.1</modelmapper-version>
        <lombok-version>1.18.8</lombok-version>
        <lombok.version>1.18.8</lombok.version>
        <zip4j.version>1.3.2</zip4j.version>
        <commons-io.version>2.7</commons-io.version>
        <druid.version>1.1.23</druid.version>
        <mybatis-spring.version>2.0.6</mybatis-spring.version>
        <hibernate-validator.version>6.0.13.Final</hibernate-validator.version>
        <joda-time.version>2.9.9</joda-time.version>
        <guava.version>[30.0-jre,)</guava.version>
        <swagger-annotations.version>1.5.13</swagger-annotations.version>
        <mybatis.version>3.5.6</mybatis.version>
        <mysql-connector-java.version>8.0.21</mysql-connector-java.version>
        <cglib.version>3.2.5</cglib.version>
        <pagehelper.version>5.1.0</pagehelper.version>
        <javax.annotation-api.version>1.3.2</javax.annotation-api.version>
        <sqljdbc4.version>4.0</sqljdbc4.version>
        <aspectjweaver.version>1.9.2</aspectjweaver.version>
        <druid-spring-boot-starter.version>1.1.18</druid-spring-boot-starter.version>
        <kafka.version>2.7.0</kafka.version>
        <libthrift.version>[0.14.0,)</libthrift.version>
        <kafka-avro-serializer.version>5.3.0</kafka-avro-serializer.version>
        <rocksdbjni.version>6.2.2</rocksdbjni.version>
        <nacos-spring.version>0.2.7</nacos-spring.version>
        <nacos-client.version>2.0.0</nacos-client.version>
        <nacos-api.version>1.3.2</nacos-api.version>
        <nacos-discovery.version>2.2.3.RELEASE</nacos-discovery.version>
        <seata.version>0.9.0</seata.version>
        <jedis.version>3.1.0</jedis.version>
        <msgpack-version>0.8.22</msgpack-version>

        <LatencyUtils.version>2.0.3</LatencyUtils.version>
        <dubbo.version>3.0.0</dubbo.version>
        <dubbo-serialization-kryo.version>2.7.12</dubbo-serialization-kryo.version>
        <dubbo-spring-boot-starter.version>3.0.0</dubbo-spring-boot-starter.version>
        <spring-cloud-sleuth-stream.version>1.3.6.RELEASE</spring-cloud-sleuth-stream.version>
        <sentinel.version>1.8.0</sentinel.version>
        <micrometer.version>1.5.4</micrometer.version>
        <HikariCP.version>3.4.5</HikariCP.version>
        <protostuff.version>1.7.2</protostuff.version>
        <h2.version>1.4.192</h2.version>
        <commons-collections.version>3.2.2</commons-collections.version>
        <alibaba.metrics>2.0.6</alibaba.metrics>
        <javassist.version>3.20.0-GA</javassist.version>
        <clickhouse-jdbc.version>0.3.1</clickhouse-jdbc.version>
    </properties>

    <dependencyManagement>

        <dependencies>
            <dependency>
                <groupId>com.hummer</groupId>
                <artifactId>hummer-first-restfull-plugin</artifactId>
                <version>${hummer.version}</version>
            </dependency>
            <dependency>
                <groupId>com.hummer</groupId>
                <artifactId>hummer-proxy-plugin</artifactId>
                <version>${hummer.version}</version>
            </dependency>
            <dependency>
                <groupId>com.hummer</groupId>
                <artifactId>hummer-dubbo-extend-plugin</artifactId>
                <version>${hummer.version}</version>
            </dependency>
            <dependency>
                <groupId>com.hummer</groupId>
                <artifactId>hummer-boot-starter</artifactId>
                <version>${hummer.version}</version>
            </dependency>
            <dependency>
                <groupId>com.hummer</groupId>
                <artifactId>hummer-config</artifactId>
                <version>${hummer.version}</version>
            </dependency>
            <dependency>
                <groupId>com.hummer</groupId>
                <artifactId>hummer-dao</artifactId>
                <version>${hummer.version}</version>
            </dependency>
            <dependency>
                <groupId>com.hummer</groupId>
                <artifactId>hummer-pipeline-plugin</artifactId>
                <version>${hummer.version}</version>
            </dependency>
            <dependency>
                <groupId>com.hummer</groupId>
                <artifactId>hummer-core</artifactId>
                <version>${hummer.version}</version>
            </dependency>
            <dependency>
                <groupId>com.hummer</groupId>
                <artifactId>hummer-rest</artifactId>
                <version>${hummer.version}</version>
            </dependency>
            <dependency>
                <groupId>com.hummer</groupId>
                <artifactId>hummer-common</artifactId>
                <version>${hummer.version}</version>
            </dependency>
            <dependency>
                <groupId>com.hummer</groupId>
                <artifactId>hummer-kafka-producer-plugin</artifactId>
                <version>${hummer.version}</version>
            </dependency>
            <dependency>
                <groupId>com.hummer</groupId>
                <artifactId>hummer-message-producer-facade-plugin</artifactId>
                <version>${hummer.version}</version>
            </dependency>
            <dependency>
                <groupId>com.hummer</groupId>
                <artifactId>hummer-user-plugin</artifactId>
                <version>${hummer.version}</version>
            </dependency>
            <dependency>
                <groupId>com.hummer</groupId>
                <artifactId>hummer-soa-plugin</artifactId>
                <version>${hummer.version}</version>
            </dependency>
            <dependency>
                <groupId>com.hummer</groupId>
                <artifactId>hummer-excel-plugin</artifactId>
                <version>${hummer.version}</version>
            </dependency>
            <dependency>
                <groupId>com.hummer</groupId>
                <artifactId>hummer-kafka-consumer-plugin</artifactId>
                <version>${hummer.version}</version>
            </dependency>
            <dependency>
                <groupId>com.hummer</groupId>
                <artifactId>hummer-local-persistence-plugin</artifactId>
                <version>${hummer.version}</version>
            </dependency>
            <dependency>
                <groupId>com.hummer</groupId>
                <artifactId>hummer-message-consumer-facade-plugin</artifactId>
                <version>${hummer.version}</version>
            </dependency>
            <dependency>
                <groupId>com.hummer</groupId>
                <artifactId>hummer-scheduling-plugin</artifactId>
                <version>${hummer.version}</version>
            </dependency>
            <dependency>
                <groupId>com.hummer</groupId>
                <artifactId>hummer-seata-spring-boot-plugin</artifactId>
                <version>${hummer.version}</version>
            </dependency>
            <dependency>
                <groupId>com.hummer</groupId>
                <artifactId>hummer-redis-plugin</artifactId>
                <version>${hummer.version}</version>
            </dependency>
            <dependency>
                <groupId>com.hummer</groupId>
                <artifactId>hummer-swagger-plugin</artifactId>
                <version>${hummer.version}</version>
            </dependency>
            <dependency>
                <groupId>com.hummer</groupId>
                <artifactId>hummer-eureka-server-api</artifactId>
                <version>${hummer.version}</version>
            </dependency>
            <dependency>
                <groupId>com.hummer</groupId>
                <artifactId>hummer-eureka-client-config</artifactId>
                <version>${hummer.version}</version>
            </dependency>
            <dependency>
                <groupId>com.hummer</groupId>
                <artifactId>hummer-cache-plugin</artifactId>
                <version>${hummer.version}</version>
            </dependency>
            <!--framework plugin-->
            <dependency>
                <groupId>ru.yandex.clickhouse</groupId>
                <artifactId>clickhouse-jdbc</artifactId>
                <version>${clickhouse-jdbc.version}</version>
            </dependency>
            <dependency>
                <groupId>org.javassist</groupId>
                <artifactId>javassist</artifactId>
                <version>${javassist.version}</version>
            </dependency>
            <dependency>
                <groupId>com.zaxxer</groupId>
                <artifactId>HikariCP</artifactId>
                <version>${HikariCP.version}</version>
            </dependency>
            <dependency>
                <groupId>com.alibaba.csp</groupId>
                <artifactId>sentinel-core</artifactId>
                <version>${sentinel.version}</version>
            </dependency>
            <dependency>
                <groupId>com.alibaba.csp</groupId>
                <artifactId>sentinel-datasource-nacos</artifactId>
                <version>${sentinel.version}</version>
            </dependency>
            <dependency>
                <groupId>com.alibaba.csp</groupId>
                <artifactId>sentinel-spring-cloud-gateway-adapter</artifactId>
                <version>${sentinel.version}</version>
            </dependency>
            <dependency>
                <groupId>com.alibaba.csp</groupId>
                <artifactId>sentinel-cluster-server-default</artifactId>
                <version>${sentinel.version}</version>
            </dependency>
            <dependency>
                <groupId>com.alibaba.csp</groupId>
                <artifactId>sentinel-cluster-client-default</artifactId>
                <version>${sentinel.version}</version>
            </dependency>
            <dependency>
                <groupId>com.alibaba.csp</groupId>
                <artifactId>sentinel-transport-simple-http</artifactId>
                <version>${sentinel.version}</version>
            </dependency>
            <dependency>
                <groupId>com.alibaba.csp</groupId>
                <artifactId>sentinel-parameter-flow-control</artifactId>
                <version>${sentinel.version}</version>
            </dependency>
            <!-- https://mvnrepository.com/artifact/org.rocksdb/rocksdbjni -->
            <dependency>
                <groupId>org.rocksdb</groupId>
                <artifactId>rocksdbjni</artifactId>
                <version>${rocksdbjni.version}</version>
            </dependency>

            <!-- https://mvnrepository.com/artifact/org.apache.thrift/libthrift -->
            <dependency>
                <groupId>org.apache.thrift</groupId>
                <artifactId>libthrift</artifactId>
                <version>${libthrift.version}</version>
            </dependency>

            <!-- https://mvnrepository.com/artifact/org.apache.kafka/kafka -->
            <dependency>
                <groupId>org.apache.kafka</groupId>
                <artifactId>kafka_2.12</artifactId>
                <version>${kafka.version}</version>
            </dependency>
            <!-- https://mvnrepository.com/artifact/org.apache.kafka/kafka-clients -->
            <dependency>
                <groupId>org.apache.kafka</groupId>
                <artifactId>kafka-clients</artifactId>
                <version>${kafka.version}</version>
            </dependency>

            <!-- https://mvnrepository.com/artifact/org.apache.kafka/kafka-streams -->
            <dependency>
                <groupId>org.apache.kafka</groupId>
                <artifactId>kafka-streams</artifactId>
                <version>${kafka.version}</version>
            </dependency>

            <dependency>
                <groupId>com.microsoft.sqlserver</groupId>
                <artifactId>sqljdbc4</artifactId>
                <version>${sqljdbc4.version}</version>
            </dependency>
            <!-- https://mvnrepository.com/artifact/javax.annotation/javax.annotation-api -->
            <dependency>
                <groupId>javax.annotation</groupId>
                <artifactId>javax.annotation-api</artifactId>
                <version>${javax.annotation-api.version}</version>
            </dependency>
            <dependency>
                <groupId>com.github.pagehelper</groupId>
                <artifactId>pagehelper</artifactId>
                <version>${pagehelper.version}</version>
            </dependency>
            <dependency>
                <groupId>cglib</groupId>
                <artifactId>cglib</artifactId>
                <version>${cglib.version}</version>
            </dependency>
            <dependency>
                <groupId>mysql</groupId>
                <artifactId>mysql-connector-java</artifactId>
                <version>${mysql-connector-java.version}</version>
                <exclusions>
                    <exclusion>
                        <artifactId>protobuf-java</artifactId>
                        <groupId>com.google.protobuf</groupId>
                    </exclusion>
                </exclusions>
            </dependency>
            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-jdbc</artifactId>
                <version>${spring-jdbc.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-tx</artifactId>
                <version>${spring-tx.version}</version>
            </dependency>
            <dependency>
                <groupId>org.mybatis</groupId>
                <artifactId>mybatis</artifactId>
                <version>${mybatis.version}</version>
            </dependency>
            <dependency>
                <groupId>io.swagger</groupId>
                <artifactId>swagger-annotations</artifactId>
                <version>${swagger-annotations.version}</version>
            </dependency>
            <dependency>
                <groupId>org.hibernate</groupId>
                <artifactId>hibernate-validator</artifactId>
                <version>${hibernate-validator.version}</version>
            </dependency>

            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-autoconfigure</artifactId>
                <version>${spring-boot.version}</version>
            </dependency>
            <dependency>
                <groupId>net.lingala.zip4j</groupId>
                <artifactId>zip4j</artifactId>
                <version>${zip4j.version}</version>
            </dependency>
            <!-- https://mvnrepository.com/artifact/org.apache.commons/commons-lang3 -->
            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-webmvc</artifactId>
                <version>${spring-webmvc.version}</version>
            </dependency>
            <dependency>
                <groupId>com.alibaba</groupId>
                <artifactId>fastjson</artifactId>
                <version>${fastjson.version}</version>
            </dependency>
            <!-- https://mvnrepository.com/artifact/org.junit.jupiter/junit-jupiter-api -->
            <dependency>
                <groupId>org.junit.jupiter</groupId>
                <artifactId>junit-jupiter-api</artifactId>
                <version>5.3.2</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>commons-io</groupId>
                <artifactId>commons-io</artifactId>
                <version>${commons-io.version}</version>
            </dependency>
            <dependency>
                <groupId>com.google.guava</groupId>
                <artifactId>guava</artifactId>
                <version>${guava.version}</version>
            </dependency>
            <dependency>
                <groupId>junit</groupId>
                <artifactId>junit</artifactId>
                <version>${junit.version}</version>
                <scope>test</scope>
            </dependency>
            <!--log framework facade,use log4j12 implement log write-->
            <dependency>
                <groupId>org.slf4j</groupId>
                <artifactId>slf4j-log4j12</artifactId>
                <version>${slf4j-api.version}</version>
            </dependency>
            <!-- https://mvnrepository.com/artifact/org.slf4j/slf4j-api -->
            <dependency>
                <groupId>org.slf4j</groupId>
                <artifactId>slf4j-api</artifactId>
                <version>${slf4j-api.version}</version>
            </dependency>

            <dependency>
                <groupId>org.projectlombok</groupId>
                <artifactId>lombok</artifactId>
                <version>${lombok.version}</version>
            </dependency>
            <dependency>
                <groupId>commons-collections</groupId>
                <artifactId>commons-collections</artifactId>
                <version>${commons-collections.version}</version>
            </dependency>
            <!--import cloud dependencies-->
            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-dependencies</artifactId>
                <version>2020.0.0</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-actuator</artifactId>
                <version>${spring-boot.version}</version>
                <exclusions>
                    <exclusion>
                        <groupId>org.springframework.boot</groupId>
                        <artifactId>spring-boot-starter-logging</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-core</artifactId>
                <version>${spring-core.version}</version>
                <exclusions>
                    <exclusion>
                        <groupId>commons-logging</groupId>
                        <artifactId>commons-logging</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
            <dependency>
                <groupId>org.slf4j</groupId>
                <artifactId>jcl-over-slf4j</artifactId>
                <version>1.7.25</version>
            </dependency>
            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-context</artifactId>
                <version>${spring-core.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-beans</artifactId>
                <version>${spring-beans.version}</version>
            </dependency>

            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-web</artifactId>
                <version>${spring-core.version}</version>
            </dependency>
            <dependency>
                <groupId>joda-time</groupId>
                <artifactId>joda-time</artifactId>
                <version>${joda-time.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-web</artifactId>
                <version>${spring-boot.version}</version>
                <exclusions>
                    <exclusion>
                        <groupId>org.springframework.boot</groupId>
                        <artifactId>spring-boot-starter-tomcat</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>org.springframework.boot</groupId>
                        <artifactId>spring-boot-starter-logging</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>com.fasterxml.jackson.core</groupId>
                        <artifactId>jackson-databind</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-log4j2</artifactId>
                <version>${spring-boot-starter-log4j2.version}</version>
            </dependency>
            <!-- https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter-undertow -->
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-undertow</artifactId>
                <version>${spring-boot-starter-undertow.version}</version>
                <exclusions>
                    <exclusion>
                        <groupId>org.jboss.logging</groupId>
                        <artifactId>*</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>

            <!-- https://mvnrepository.com/artifact/com.alibaba/druid -->
            <dependency>
                <groupId>com.alibaba</groupId>
                <artifactId>druid</artifactId>
                <version>${druid.version}</version>
            </dependency>

            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-data-jpa</artifactId>
                <version>${spring-boot.version}</version>
            </dependency>
            <dependency>
                <groupId>com.h2database</groupId>
                <artifactId>h2</artifactId>
                <version>${h2.version}</version>
                <scope>runtime</scope>
            </dependency>

            <dependency>
                <groupId>org.mybatis</groupId>
                <artifactId>mybatis-spring</artifactId>
                <version>${mybatis-spring.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-test</artifactId>
                <version>${spring-boot.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>io.springfox</groupId>
                <artifactId>springfox-swagger2</artifactId>
                <version>${swagger.version}</version>
            </dependency>
            <!--Swagger UI-->
            <dependency>
                <groupId>io.springfox</groupId>
                <artifactId>springfox-swagger-ui</artifactId>
                <version>${swagger.version}</version>
            </dependency>

            <dependency>
                <groupId>org.mockito</groupId>
                <artifactId>mockito-core</artifactId>
                <version>${mockito-core.version}</version>
                <scope>test</scope>
            </dependency>
            <!-- Cucumber-->
            <dependency>
                <groupId>info.cukes</groupId>
                <artifactId>cucumber-java</artifactId>
                <version>${cucumber-version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>info.cukes</groupId>
                <artifactId>cucumber-junit</artifactId>
                <version>${cucumber-version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>info.cukes</groupId>
                <artifactId>cucumber-spring</artifactId>
                <version>${cucumber-version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.springframework.retry</groupId>
                <artifactId>spring-retry</artifactId>
                <version>${spring.retry.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-aop</artifactId>
                <version>${spring-aop.version}</version>
            </dependency>
            <dependency>
                <groupId>org.modelmapper</groupId>
                <artifactId>modelmapper</artifactId>
                <version>${modelmapper-version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot</artifactId>
                <version>${spring-boot.version}</version>
            </dependency>
            <dependency>
                <groupId>org.aspectj</groupId>
                <artifactId>aspectjweaver</artifactId>
                <version>${aspectjweaver.version}</version>
            </dependency>

            <!-- https://mvnrepository.com/artifact/com.alibaba.boot/nacos-config-spring-boot-starter -->
            <!-- notice: this spring-boot-starter incompatible spring-boot 2.4.X-->
            <dependency>
                <groupId>com.alibaba.boot</groupId>
                <artifactId>nacos-config-spring-boot-starter</artifactId>
                <version>${nacos-spring.version}</version>
                <exclusions>
                    <exclusion>
                        <groupId>ch.qos.logback</groupId>
                        <artifactId>logback-classic</artifactId>
                    </exclusion>
                    <exclusion>
                        <artifactId>spring-boot-starter-logging</artifactId>
                        <groupId>org.springframework.boot</groupId>
                    </exclusion>
                    <exclusion>
                        <groupId>org.springframework</groupId>
                        <artifactId>spring-context</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>org.springframework.boot</groupId>
                        <artifactId>spring-boot-starter</artifactId>
                    </exclusion>
                </exclusions>

            </dependency>
            <dependency>
                <groupId>com.alibaba.nacos</groupId>
                <artifactId>nacos-client</artifactId>
                <version>${nacos-client.version}</version>
            </dependency>
            <dependency>
                <groupId>com.alibaba.nacos</groupId>
                <artifactId>nacos-api</artifactId>
                <version>${nacos-api.version}</version>
            </dependency>


            <dependency>
                <groupId>com.alibaba.cloud</groupId>
                <artifactId>spring-cloud-starter-alibaba-nacos-discovery</artifactId>
                <version>${nacos-discovery.version}</version>
                <exclusions>
                    <exclusion>
                        <groupId>org.springframework</groupId>
                        <artifactId>spring-context</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>

            <dependency>
                <groupId>io.seata</groupId>
                <artifactId>seata-all</artifactId>
                <version>${seata.version}</version>
            </dependency>
            <!-- https://mvnrepository.com/artifact/redis.clients/jedis -->
            <dependency>
                <groupId>redis.clients</groupId>
                <artifactId>jedis</artifactId>
                <version>${jedis.version}</version>
            </dependency>
            <!-- https://mvnrepository.com/artifact/org.msgpack/msgpack -->
            <dependency>
                <groupId>org.msgpack</groupId>
                <artifactId>msgpack-core</artifactId>
                <version>${msgpack-version}</version>
            </dependency>
            <!-- https://mvnrepository.com/artifact/org.msgpack/jackson-dataformat-msgpack -->
            <dependency>
                <groupId>org.msgpack</groupId>
                <artifactId>jackson-dataformat-msgpack</artifactId>
                <version>${msgpack-version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-test</artifactId>
                <version>${spring-test.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-test</artifactId>
                <version>${spring-boot.version}</version>
                <scope>test</scope>
            </dependency>
            <!-- https://mvnrepository.com/artifact/org.apache.dubbo/dubbo -->
            <dependency>
                <groupId>org.apache.dubbo</groupId>
                <artifactId>dubbo</artifactId>
                <version>${dubbo.version}</version>
                <exclusions>
                    <exclusion>
                        <groupId>org.springframework</groupId>
                        <artifactId>spring</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>javax.servlet</groupId>
                        <artifactId>servlet-api</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>log4j</groupId>
                        <artifactId>log4j</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
            <dependency>
                <groupId>org.apache.dubbo</groupId>
                <artifactId>dubbo-serialization-kryo</artifactId>
                <version>${dubbo-serialization-kryo.version}</version>
                <exclusions>
                    <exclusion>
                        <groupId>org.apache.dubbo</groupId>
                        <artifactId>dubbo-common</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>org.apache.dubbo</groupId>
                        <artifactId>dubbo-serialization-api</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
            <dependency>
                <groupId>org.apache.dubbo</groupId>
                <artifactId>dubbo-serialization-api</artifactId>
                <version>${dubbo.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.dubbo</groupId>
                <artifactId>dubbo-common</artifactId>
                <version>${dubbo.version}</version>
            </dependency>
            <!-- https://mvnrepository.com/artifact/com.alibaba.spring.boot/dubbo-spring-boot-starter -->
            <dependency>
                <groupId>org.apache.dubbo</groupId>
                <artifactId>dubbo-spring-boot-starter</artifactId>
                <version>${dubbo-spring-boot-starter.version}</version>
            </dependency>
            <!-- https://mvnrepository.com/artifact/org.springframework.cloud/spring-cloud-sleuth-stream -->
            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-sleuth-stream</artifactId>
                <version>${spring-cloud-sleuth-stream.version}</version>
            </dependency>
            <!-- https://mvnrepository.com/artifact/org.springframework.cloud/spring-cloud-starter-zipkin -->
            <dependency>
                <groupId>org.latencyutils</groupId>
                <artifactId>LatencyUtils</artifactId>
                <version>${LatencyUtils.version}</version>
            </dependency>

            <!-- https://mvnrepository.com/artifact/com.netflix.ribbon/ribbon-eureka -->
            <dependency>
                <groupId>com.netflix.ribbon</groupId>
                <artifactId>ribbon-eureka</artifactId>
                <version>2.3.0</version>
            </dependency>
            <!-- https://mvnrepository.com/artifact/org.glassfish.jaxb/jaxb-runtime -->
            <dependency>
                <groupId>org.glassfish.jaxb</groupId>
                <artifactId>jaxb-runtime</artifactId>
                <version>2.3.3</version>
            </dependency>
            <dependency>
                <groupId>io.micrometer</groupId>
                <artifactId>micrometer-registry-prometheus</artifactId>
                <version>${micrometer.version}</version>
            </dependency>
            <!-- https://mvnrepository.com/artifact/io.protostuff/protostuff-runtime -->
            <dependency>
                <groupId>io.protostuff</groupId>
                <artifactId>protostuff-runtime</artifactId>
                <version>${protostuff.version}</version>
            </dependency>
            <!-- https://mvnrepository.com/artifact/io.protostuff/protostuff-api -->
            <dependency>
                <groupId>io.protostuff</groupId>
                <artifactId>protostuff-api</artifactId>
                <version>${protostuff.version}</version>
            </dependency>
            <dependency>
                <groupId>io.protostuff</groupId>
                <artifactId>protostuff-core</artifactId>
                <version>${protostuff.version}</version>
            </dependency>
            <dependency>
                <groupId>io.protostuff</groupId>
                <artifactId>protostuff-json</artifactId>
                <version>${protostuff.version}</version>
            </dependency>
            <dependency>
                <groupId>com.alibaba.middleware</groupId>
                <artifactId>metrics-core-api</artifactId>
                <version>${alibaba.metrics}</version>
            </dependency>
            <dependency>
                <groupId>com.alibaba.middleware</groupId>
                <artifactId>metrics-core-impl</artifactId>
                <version>${alibaba.metrics}</version>
            </dependency>
            <!--           Specify spring cloud version -->
            <!-- https://mvnrepository.com/artifact/org.springframework.cloud/spring-cloud-starter-netflix-eureka-server -->
            <!--            <dependency>-->
            <!--                <groupId>org.springframework.cloud</groupId>-->
            <!--                <artifactId>spring-cloud-starter-netflix-eureka-server</artifactId>-->
            <!--                <version>${spring-cloud.version}</version>-->
            <!--            </dependency>-->
            <!--            &lt;!&ndash; https://mvnrepository.com/artifact/org.springframework.cloud/spring-cloud-starter-sleuth &ndash;&gt;-->
            <!--            <dependency>-->
            <!--                <groupId>org.springframework.cloud</groupId>-->
            <!--                <artifactId>spring-cloud-starter-sleuth</artifactId>-->
            <!--                <version>${spring-cloud.version}</version>-->
            <!--            </dependency>-->
            <!--            &lt;!&ndash; https://mvnrepository.com/artifact/org.springframework.cloud/spring-cloud-stream-binder-kafka &ndash;&gt;-->
            <!--            <dependency>-->
            <!--                <groupId>org.springframework.cloud</groupId>-->
            <!--                <artifactId>spring-cloud-stream-binder-kafka</artifactId>-->
            <!--                <version>${spring-cloud-stream-binder-kafka.version}</version>-->
            <!--            </dependency>-->
            <!--            &lt;!&ndash; https://mvnrepository.com/artifact/org.springframework.cloud/spring-cloud-sleuth-core &ndash;&gt;-->
            <!--            <dependency>-->
            <!--                <groupId>org.springframework.cloud</groupId>-->
            <!--                <artifactId>spring-cloud-sleuth-core</artifactId>-->
            <!--                <version>${spring-cloud.version}</version>-->
            <!--            </dependency>-->

            <!--            <dependency>-->
            <!--                <groupId>org.springframework.cloud</groupId>-->
            <!--                <artifactId>spring-cloud-loadbalancer</artifactId>-->
            <!--                <version>${spring-cloud.version}</version>-->
            <!--            </dependency>-->
            <!--            <dependency>-->
            <!--                <groupId>org.springframework.cloud</groupId>-->
            <!--                <artifactId>spring-cloud-starter-gateway</artifactId>-->
            <!--                <version>${spring-cloud.version}</version>-->
            <!--            </dependency>-->
            <!--            &lt;!&ndash; https://mvnrepository.com/artifact/org.springframework.cloud/spring-cloud-starter &ndash;&gt;-->
            <!--            <dependency>-->
            <!--                <groupId>org.springframework.cloud</groupId>-->
            <!--                <artifactId>spring-cloud-starter</artifactId>-->
            <!--                <version>${spring-cloud.version}</version>-->
            <!--            </dependency>-->
            <!--            &lt;!&ndash; https://mvnrepository.com/artifact/org.springframework.cloud/spring-cloud-netflix-eureka-server &ndash;&gt;-->
            <!--            <dependency>-->
            <!--                <groupId>org.springframework.cloud</groupId>-->
            <!--                <artifactId>spring-cloud-netflix-eureka-server</artifactId>-->
            <!--                <version>${spring-cloud.version}</version>-->
            <!--            </dependency>-->
            <!--            &lt;!&ndash; https://mvnrepository.com/artifact/org.springframework.cloud/spring-cloud-starter-netflix-archaius &ndash;&gt;-->
            <!--            <dependency>-->
            <!--                <groupId>org.springframework.cloud</groupId>-->
            <!--                <artifactId>spring-cloud-starter-netflix-archaius</artifactId>-->
            <!--                <version>${spring-cloud.version}</version>-->
            <!--            </dependency>-->
            <!--            &lt;!&ndash; https://mvnrepository.com/artifact/org.springframework.cloud/spring-cloud-starter-netflix-ribbon &ndash;&gt;-->
            <!--            <dependency>-->
            <!--                <groupId>org.springframework.cloud</groupId>-->
            <!--                <artifactId>spring-cloud-starter-netflix-ribbon</artifactId>-->
            <!--                <version>${spring-cloud.version}</version>-->
            <!--            </dependency>-->
            <!--            &lt;!&ndash; https://mvnrepository.com/artifact/org.springframework.cloud/spring-cloud-starter-loadbalancer &ndash;&gt;-->
            <!--            <dependency>-->
            <!--                <groupId>org.springframework.cloud</groupId>-->
            <!--                <artifactId>spring-cloud-starter-loadbalancer</artifactId>-->
            <!--                <version>${spring-cloud.version}</version>-->
            <!--            </dependency>-->
            <!--            &lt;!&ndash; https://mvnrepository.com/artifact/org.springframework.cloud/spring-cloud-starter-netflix-eureka-client &ndash;&gt;-->
            <!--            <dependency>-->
            <!--                <groupId>org.springframework.cloud</groupId>-->
            <!--                <artifactId>spring-cloud-starter-netflix-eureka-client</artifactId>-->
            <!--                <version>${spring-cloud.version}</version>-->
            <!--            </dependency>-->
        </dependencies>
    </dependencyManagement>
    <!-- Dependencies -->
</project>
